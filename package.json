{
  "name": "secure-vault",
  "version": "0.1.0",
  "private": true,
  "main": "electron.js",
  "homepage": "./",
  "dependencies": {
    "@emotion/react": "^11.11.3",
    "@emotion/styled": "^11.11.0",
    "@mui/icons-material": "^5.15.7",
    "@mui/material": "^5.15.7",
    "@supabase/supabase-js": "^2.49.1",
    "axios": "^1.8.3",
    "file-saver": "^2.0.5",
    "jspdf": "^3.0.0",
    "jspdf-autotable": "^5.0.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.21.3",
    "react-scripts": "5.0.1",
    "recharts": "^2.15.1",
    "xlsx": "^0.18.5"
  },
  "scripts": {
    "start": "set PORT=3000 && set NODE_OPTIONS=--openssl-legacy-provider --no-deprecation && react-scripts start",
    "build": "set NODE_OPTIONS=--openssl-legacy-provider && react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "electron:dev": "concurrently \"npm start\" \"npm run backend:dev\" \"wait-on http://localhost:3000 && set NODE_ENV=development && electron .\"",
    "electron:build": "npm run build && node pack-backend.js && electron-builder",
    "electron:pack-backend": "node pack-backend.js",
    "backend:dev": "cd backend && npm run dev",
    "backend:prod": "cd backend && npm run start"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "proxy": "http://localhost:5000",
  "devDependencies": {
    "concurrently": "^9.1.2",
    "electron": "^35.1.1",
    "electron-builder": "^26.0.12",
    "wait-on": "^8.0.3"
  },
  "build": {
    "appId": "com.securevault.app",
    "productName": "SecureVault",
    "files": [
      "build/**/*",
      "electron.js",
      "preload.js",
      "node_modules/**/*"
    ],
    "directories": {
      "buildResources": "assets"
    },
    "extraResources": [
      {
        "from": "backend",
        "to": "backend",
        "filter": ["**/*", "!node_modules/**/*"]
      }
    ],
    "win": {
      "icon": "assets/icon.ico",
      "target": ["nsis"]
    },
    "mac": {
      "icon": "assets/icon.icns",
      "target": ["dmg"]
    },
    "linux": {
      "icon": "assets/icon.png",
      "target": ["AppImage", "deb"]
    }
  }
}
